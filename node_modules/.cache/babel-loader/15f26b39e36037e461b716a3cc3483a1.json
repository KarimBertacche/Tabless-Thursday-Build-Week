{"ast":null,"code":"var _jsxFileName = \"/Users/klaptop/Desktop/tabless-thursday/src/components/SignUp.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../store/actions/actions';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      password2: '',\n      email: ''\n    };\n\n    this.registerInputHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.registerUserHadler = event => {\n      event.preventDefault();\n\n      if (this.state.password === this.state.password2) {\n        const credentials = {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email\n        };\n        this.props.onRegisteringUser(credentials);\n        this.setState({\n          username: '',\n          password: '',\n          password2: '',\n          email: ''\n        });\n      } else {\n        alert('passwords don\\'t match');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.registerUserHadler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.username,\n      name: \"username\",\n      onChange: this.registerInputHandler,\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      name: \"password\",\n      onChange: this.registerInputHandler,\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password2,\n      name: \"password2\",\n      onChange: this.registerInputHandler,\n      placeholder: \"repeat password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      value: this.state.email,\n      name: \"email\",\n      onChange: this.registerInputHandler,\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Register\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRegisteringUser: credentials => dispatch({\n      type: registerUser,\n      payload: credentials\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/klaptop/Desktop/tabless-thursday/src/components/SignUp.jsx"],"names":["React","Component","connect","registerUser","SignUp","state","username","password","password2","email","registerInputHandler","event","setState","target","name","value","registerUserHadler","preventDefault","credentials","props","onRegisteringUser","alert","render","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {Â registerUser } from '../store/actions/actions';\n\nclass SignUp extends Component {\n    state = {\n        username: '',\n        password: '',\n        password2: '',\n        email: ''\n    }\n\n    registerInputHandler = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    registerUserHadler = (event) => {\n        event.preventDefault();\n\n        if (this.state.password === this.state.password2) {\n            const credentials = {\n                username: this.state.username,\n                password: this.state.password,\n                email: this.state.email\n            }\n    \n            this.props.onRegisteringUser(credentials);\n    \n            this.setState({\n                username: '',\n                password: '',\n                password2: '',\n                email: ''\n            })\n        } else {\n            alert('passwords don\\'t match');\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.registerUserHadler}>\n                <input \n                    type=\"text\"\n                    value={this.state.username}\n                    name='username'\n                    onChange={this.registerInputHandler}\n                    placeholder='username'\n                />\n                <input \n                    type=\"password\"\n                    value={this.state.password}\n                    name=\"password\"\n                    onChange={this.registerInputHandler}\n                    placeholder=\"password\"\n                />\n                <input \n                    type=\"password\"\n                    value={this.state.password2}\n                    name=\"password2\"\n                    onChange={this.registerInputHandler}\n                    placeholder=\"repeat password\"\n                />\n                <input \n                    type=\"email\"\n                    value={this.state.email}\n                    name=\"email\"\n                    onChange={this.registerInputHandler}\n                    placeholder=\"email\"/>\n                <button type=\"submit\">Register</button>\n            </form>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRegisteringUser: (credentials) => dispatch({ type: registerUser, payload: credentials })\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}