{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/klaptop/Desktop/tabless-thursday/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/klaptop/Desktop/tabless-thursday/src/components/SignUp.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 300px;\\n    width: 25%;\\n    height: 350px;\\n    margin: 10% auto 0;\\n    border: 3px solid #000;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    padding: 30px;\\n\\n    h2 {\\n        font-size: 3rem;\\n        margin: 0;\\n        margin-bottom: 20px;\\n        text-align: center;\\n    }\\n\\n    input {\\n        height: 35px;\\n        border: 3px solid red;\\n        border-radius: 5px;\\n        margin-bottom: 20px;\\n        font-size: 1.5rem;\\n        text-align: center;\\n        outline: none;\\n    }\\n\\n    button {\\n        width: 40%;\\n        margin: 0 auto;\\n        padding: 5px;\\n        border: 3px solid red;\\n        border-radius: 5px;\\n        cursor: pointer;\\n        font-size: 1.2rem;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { registerUser } from '../store/actions/actions';\nconst StylesSignUp = styled.form(_templateObject());\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.registerInputHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.registerUserHandler = event => {\n      event.preventDefault();\n      this.props.registerUser({\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email\n      }).then(() => {\n        this.props.history.push('/login');\n      });\n      this.setState({\n        username: '',\n        password: '',\n        password2: '',\n        email: ''\n      });\n      this.props.passRegisteredUserHandler(); // } else {\n      //     alert('passwords don\\'t match');\n      //     this.setState({\n      //         password: '',\n      //         password2: ''\n      //     })\n      // }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      email: ''\n    };\n  }\n\n  render() {\n    return React.createElement(StylesSignUp, {\n      onSubmit: this.registerUserHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.username,\n      name: \"username\",\n      onChange: this.registerInputHandler,\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      name: \"password\",\n      onChange: this.registerInputHandler,\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      value: this.state.email,\n      name: \"email\",\n      onChange: this.registerInputHandler,\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Register\"));\n  }\n\n} // const mapDispatchToProps = dispatch => {\n//     return {\n//         onRegisteringUser: (credentials) => dispatch({ type: registerUser, payload: credentials })\n//     }\n// }\n\n\nexport default connect(null, {\n  registerUser\n})(SignUp);","map":{"version":3,"sources":["/Users/klaptop/Desktop/tabless-thursday/src/components/SignUp.jsx"],"names":["React","Component","connect","styled","registerUser","StylesSignUp","form","SignUp","constructor","props","registerInputHandler","event","setState","target","name","value","registerUserHandler","preventDefault","username","state","password","email","then","history","push","password2","passRegisteredUserHandler","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,IAAV,mBAAlB;;AAyCA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC3BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,oBATmB,GASKC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAApC,OAAd;AACH,KAXkB;;AAAA,SAanBC,mBAbmB,GAaIL,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACM,cAAN;AAEA,WAAKR,KAAL,CAAWL,YAAX,CAAwB;AACpBc,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADD;AAEpBE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFD;AAGpBC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAHE,OAAxB,EAIGC,IAJH,CAIQ,MAAM;AACV,aAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,OAND;AAQA,WAAKZ,QAAL,CAAc;AACVM,QAAAA,QAAQ,EAAE,EADA;AAEVE,QAAAA,QAAQ,EAAE,EAFA;AAGVK,QAAAA,SAAS,EAAE,EAHD;AAIVJ,QAAAA,KAAK,EAAE;AAJG,OAAd;AAOA,WAAKZ,KAAL,CAAWiB,yBAAX,GAlB6B,CAmB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAvCkB;;AAEf,SAAKP,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,EADD;AAETE,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAkCDM,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAE,KAAKX,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWD,QAFtB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,QAAQ,EAAE,KAAKR,oBAJnB;AAKI,MAAA,WAAW,EAAC,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWC,QAFtB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,QAAQ,EAAE,KAAKV,oBAJnB;AAKI,MAAA,WAAW,EAAC,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAuBI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWE,KAFtB;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,QAAQ,EAAE,KAAKX,oBAJnB;AAKI,MAAA,WAAW,EAAC,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,EA6BI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BJ,CADJ;AAiCH;;AA5E0B,C,CA+E/B;AACA;AACA;AACA;AACA;;;AAEA,eAAeR,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA;AAAF,CAAP,CAAP,CAAgCG,MAAhC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {Â registerUser } from '../store/actions/actions';\n\nconst StylesSignUp = styled.form`\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: 25%;\n    height: 350px;\n    margin: 10% auto 0;\n    border: 3px solid #000;\n    border-radius: 10px;\n    overflow: hidden;\n    padding: 30px;\n\n    h2 {\n        font-size: 3rem;\n        margin: 0;\n        margin-bottom: 20px;\n        text-align: center;\n    }\n\n    input {\n        height: 35px;\n        border: 3px solid red;\n        border-radius: 5px;\n        margin-bottom: 20px;\n        font-size: 1.5rem;\n        text-align: center;\n        outline: none;\n    }\n\n    button {\n        width: 40%;\n        margin: 0 auto;\n        padding: 5px;\n        border: 3px solid red;\n        border-radius: 5px;\n        cursor: pointer;\n        font-size: 1.2rem;\n    }\n`;\n\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            email: ''\n        }\n    }\n\n    registerInputHandler = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    registerUserHandler = (event) => {\n        event.preventDefault();\n    \n        this.props.registerUser({\n            username: this.state.username,\n            password: this.state.password,\n            email: this.state.email\n        }).then(() => {\n            this.props.history.push('/login')\n        });\n\n        this.setState({\n            username: '',\n            password: '',\n            password2: '',\n            email: ''\n        })\n\n        this.props.passRegisteredUserHandler();\n        // } else {\n        //     alert('passwords don\\'t match');\n        //     this.setState({\n        //         password: '',\n        //         password2: ''\n        //     })\n        // }\n    }\n\n    render() {\n        return (\n            <StylesSignUp onSubmit={this.registerUserHandler}>\n                <h2>Register</h2>\n                <input \n                    type=\"text\"\n                    value={this.state.username}\n                    name='username'\n                    onChange={this.registerInputHandler}\n                    placeholder='username'\n                />\n                <input \n                    type=\"password\"\n                    value={this.state.password}\n                    name=\"password\"\n                    onChange={this.registerInputHandler}\n                    placeholder=\"password\"\n                />\n                {/* <input \n                    type=\"password\"\n                    value={this.state.password2}\n                    name=\"password2\"\n                    onChange={this.registerInputHandler}\n                    placeholder=\"repeat password\"\n                /> */}\n                <input \n                    type=\"email\"\n                    value={this.state.email}\n                    name=\"email\"\n                    onChange={this.registerInputHandler}\n                    placeholder=\"email\"/>\n                <button type=\"submit\">Register</button>\n            </StylesSignUp>\n        );\n    }\n}\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         onRegisteringUser: (credentials) => dispatch({ type: registerUser, payload: credentials })\n//     }\n// }\n\nexport default connect(null, { registerUser })(SignUp);"]},"metadata":{},"sourceType":"module"}